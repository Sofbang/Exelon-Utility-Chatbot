{
  "name" : "ExelonBGEUtilityDev",
  "description" : "BG&E Chatbot for development",
  "type" : "USER",
  "intents" : [ {
    "name" : "OutageStatus",
    "paramsList" : [ {
      "entity" : {
        "name" : "PHONE_NUMBER",
        "type" : "SYSTEM",
        "enumValues" : null,
        "ruleParameters" : null,
        "parentEntity" : null,
        "patternExpression" : null
      },
      "name" : "PHONE_NUMBER",
      "isRequired" : true,
      "required" : true
    } ],
    "type" : "NLPIntent"
  }, {
    "name" : "End",
    "paramsList" : [ ],
    "type" : "NLPIntent"
  }, {
    "name" : "ReportOutage",
    "paramsList" : [ {
      "entity" : {
        "name" : "PHONE_NUMBER",
        "type" : "SYSTEM",
        "enumValues" : null,
        "ruleParameters" : null,
        "parentEntity" : null,
        "patternExpression" : null
      },
      "name" : "PHONE_NUMBER",
      "isRequired" : true,
      "required" : true
    } ],
    "type" : "NLPIntent"
  }, {
    "name" : "StartBot",
    "paramsList" : [ ],
    "type" : "NLPIntent"
  } ],
  "entities" : [ {
    "name" : "OutageType",
    "type" : "ENUMVALUES",
    "enumValues" : "Full{full:all out:everything gone},Partial{partial:not all}",
    "ruleParameters" : null,
    "parentEntity" : null,
    "patternExpression" : null
  }, {
    "name" : "AccountType",
    "type" : "ENUMVALUES",
    "enumValues" : "Phone Number{contact number:phone:cell number:number},Account Number{account:account number}",
    "ruleParameters" : null,
    "parentEntity" : null,
    "patternExpression" : null
  }, {
    "name" : "OutageOptions",
    "type" : "ENUMVALUES",
    "enumValues" : "Check Outage Status{check outage:outage status:check status for outage},Report An Outage{report outage:report status for outage:report for outage}",
    "ruleParameters" : null,
    "parentEntity" : null,
    "patternExpression" : null
  } ],
  "dialog" : [ {
    "metadata" : {
      "platformVersion" : "1.0"
    },
    "main" : true,
    "name" : "BGEutility",
    "context" : {
      "variables" : {
        "greeting" : "string",
        "name" : "string",
        "outageOptions" : "OutageOptions",
        "phoneNumber" : "PHONE_NUMBER",
        "accountNumber" : "string",
        "outageType" : "OutageType",
        "outageStatus" : "string",
        "selectionType" : "string",
        "outageStatusMessage" : "string",
        "setStatus" : "string",
        "selectedAccountType" : "string",
        "verifiedAddressResult" : "string",
        "addressResponse" : "string",
        "accountType" : "AccountType",
        "ifAddressExist" : "string",
        "addressFound" : "string",
        "setOutageReported" : "string",
        "choices" : "string",
        "accounts" : "string",
        "setAddress" : "string",
        "counter" : "string",
        "outageReportProgress" : "string",
        "testResult" : "string",
        "anythingElseVariable" : "string",
        "noAddressFoundMessage" : "string",
        "reportOutageOrNot" : "string",
        "reportOutageVariable" : "string",
        "activeStatusResponse" : "string",
        "numberOfAccount" : "string",
        "accountsOptions" : "string",
        "allResult" : "string",
        "selectedAccountNumber" : "string",
        "newUserAccount" : "string",
        "selectedAccountOption" : "string",
        "moreThanThreeAccount" : "string",
        "isMultipleAddressOrNot" : "string",
        "typeOfFault" : "string",
        "maskedAddressFound" : "string",
        "selectAccountOrPhoneVariable" : "string",
        "unresolvedVariable" : "string",
        "addressNotCorrectCountVariable" : "string",
        "iResult" : "nlpresult"
      }
    },
    "states" : {
      "intent" : {
        "component" : "System.Intent",
        "properties" : {
          "variable" : "iResult",
          "confidenceThreshold" : 0.4
        },
        "transitions" : {
          "actions" : {
            "StartBot" : "resetStartBot",
            "OutageStatus" : "resetOutageStatus",
            "ReportOutage" : "resetAllReportOutageVariable",
            "End" : "resetEnd",
            "unresolvedIntent" : "checkUnresolvedCount"
          }
        }
      },
      "resetStartBot" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "addressNotCorrectCountVariable,user.addressNotCorrectCountVariable,unresolvedVariable,user.unresolvedVariable,selectAccountOrPhoneVariable,user.selectAccountOrPhoneVariable"
        },
        "transitions" : { }
      },
      "startBot" : {
        "component" : "System.List",
        "properties" : {
          "options" : "${outageOptions.type.enumValues}",
          "prompt" : "Hello, how may I help you today?\nYou can Check Outage Status or Report an Outage.\nPlease pick one option.",
          "variable" : "outageOptions",
          "maxPrompts" : 1
        },
        "transitions" : {
          "next" : "switchOutageOptions"
        }
      },
      "switchOutageOptions" : {
        "component" : "System.Switch",
        "properties" : {
          "variable" : "outageOptions",
          "values" : [ "Check Outage Status", "Report An Outage" ]
        },
        "transitions" : {
          "actions" : {
            "Check Outage Status" : "resetOutageStatus",
            "Report An Outage" : "resetAllReportOutageVariable"
          }
        }
      },
      "resetIntent" : {
        "component" : "System.Intent",
        "properties" : {
          "variable" : "iResult",
          "confidenceThreshold" : 0.4
        },
        "transitions" : {
          "actions" : {
            "StartBot" : "resetStartBot",
            "OutageStatus" : "resetOutageStatus",
            "ReportOutage" : "resetAllReportOutageVariable",
            "End" : "resetEnd",
            "unresolvedIntent" : "checkUnresolvedCount"
          }
        }
      },
      "resetOutageStatus" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "addressNotCorrectCountVariable,user.addressNotCorrectCountVariable,unresolvedVariable,user.unresolvedVariable,selectAccountOrPhoneVariable,user.selectAccountOrPhoneVariable"
        },
        "transitions" : { }
      },
      "outageStatus" : {
        "component" : "System.Text",
        "properties" : {
          "prompt" : "Let's see what's going on with your service.\nWhat is the primary phone number associated with your account?",
          "variable" : "phoneNumber"
        },
        "transitions" : {
          "next" : "printOutage"
        }
      },
      "printOutage" : {
        "component" : "OutageStatus",
        "properties" : {
          "PhoneNumber" : "${phoneNumber.value.completeNumber}",
          "AccountNumber" : "${accountNumber.value}"
        },
        "transitions" : {
          "actions" : {
            "setVariableValues" : "addressFoundOrNot"
          }
        }
      },
      "addressFoundOrNot" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "addressFound",
          "value" : "yes"
        },
        "transitions" : {
          "actions" : {
            "equal" : "isMaskedAddressFound",
            "notequal" : "againResetVariables"
          }
        }
      },
      "isMaskedAddressFound" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "maskedAddressFound",
          "value" : "true"
        },
        "transitions" : {
          "actions" : {
            "equal" : "checkAccountNumberType",
            "notequal" : "resetActiveStatusResponseForGasOnly"
          }
        }
      },
      "resetActiveStatusResponseForGasOnly" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "activeStatusResponse"
        },
        "transitions" : { }
      },
      "forGasOnly" : {
        "component" : "System.List",
        "properties" : {
          "options" : "yes,no",
          "prompt" : "I see that your account is associated with gas services only. For all gas emergencies, please contact BGE at 1-877-778-2222.\nIf you smell natural gas, leave the area immediately, and then call BGE. This number is available 24 hours a day, 7 days a week.\nIs there anything else that I can help you with?",
          "variable" : "activeStatusResponse"
        },
        "transitions" : {
          "next" : "checkActiveStatusResponse"
        }
      },
      "checkAccountNumberType" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "numberOfAccount",
          "value" : "single"
        },
        "transitions" : {
          "actions" : {
            "equal" : "isAddressCorrect",
            "notequal" : "checkNumberOfAccounts"
          }
        }
      },
      "checkNumberOfAccounts" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "moreThanThreeAccount",
          "value" : "true"
        },
        "transitions" : {
          "actions" : {
            "equal" : "printMessageForMoreThanThreeAccounts",
            "notequal" : "setVariableForMultipleAddress"
          }
        }
      },
      "printMessageForMoreThanThreeAccounts" : {
        "component" : "System.Output",
        "properties" : {
          "text" : "My records indicate that there are several addresses associated with this account. Please visit us at bge.com or you can call us at 1-800-685-0123 for further support."
        },
        "transitions" : {
          "return" : "printMessageForOverThreeAccounts"
        }
      },
      "setVariableForMultipleAddress" : {
        "component" : "System.SetVariable",
        "properties" : {
          "variable" : "isMultipleAddressOrNot",
          "value" : "true"
        },
        "transitions" : {
          "next" : "multipleAddressAccount"
        }
      },
      "multipleAddressAccount" : {
        "component" : "System.List",
        "properties" : {
          "options" : "${accountsOptions.value}",
          "prompt" : "My records indicate that there are multiple addresses associated with the phone number provided. Please select the correct address:",
          "variable" : "selectedAccountOption"
        },
        "transitions" : {
          "next" : "selectedAddressFromMultiple"
        }
      },
      "selectedAddressFromMultiple" : {
        "component" : "OutageStatus",
        "properties" : {
          "PhoneNumber" : "",
          "AccountNumber" : "",
          "SelectedMaskedAddress" : "${selectedAccountOption.value}",
          "MultipleAccountInfo" : "${allResult}"
        },
        "transitions" : {
          "actions" : {
            "setVariableValues" : "checkStatusOrReportOutage"
          }
        }
      },
      "againResetVariables" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "phoneNumber,accountNumber,addressResponse,selectedAccountType"
        },
        "transitions" : { }
      },
      "checkSelectAccountOrPhoneCount" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "user.selectAccountOrPhoneVariable",
          "value" : "1"
        },
        "transitions" : {
          "actions" : {
            "equal" : "callCustCare",
            "notequal" : "selectAccountOrPhone"
          }
        }
      },
      "selectAccountOrPhone" : {
        "component" : "System.List",
        "properties" : {
          "options" : "Phone Number, Account Number",
          "prompt" : "I’m sorry, but I can't find an account associated with that phone number.\nDo you have another phone number or the account number available?",
          "variable" : "selectedAccountType",
          "maxPrompts" : 1
        },
        "transitions" : {
          "next" : "setAccountOrPhoneVariable"
        }
      },
      "setAccountOrPhoneVariable" : {
        "component" : "System.SetVariable",
        "properties" : {
          "variable" : "selectAccountOrPhoneVariable",
          "value" : "1"
        },
        "transitions" : { }
      },
      "copyAccountOrPhoneVariables" : {
        "component" : "System.CopyVariables",
        "properties" : {
          "from" : "selectAccountOrPhoneVariable",
          "to" : "user.selectAccountOrPhoneVariable"
        },
        "transitions" : {
          "next" : "resetSelectedAccountVariables"
        }
      },
      "isAddressCorrect" : {
        "component" : "System.List",
        "properties" : {
          "options" : "yes,no",
          "prompt" : "${setAddress.value}.\nIs this correct?",
          "variable" : "addressResponse"
        },
        "transitions" : {
          "next" : "checkAddressResponse"
        }
      },
      "checkAddressResponse" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "addressResponse",
          "value" : "yes"
        },
        "transitions" : {
          "actions" : {
            "equal" : "checkStatusOrReportOutage",
            "notequal" : "resetVariables"
          }
        }
      },
      "resetVariables" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "phoneNumber,accountNumber,addressResponse,selectedAccountType,numberOfAccount"
        },
        "transitions" : { }
      },
      "checkAddressNotCorrectCount" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "user.addressNotCorrectCountVariable",
          "value" : "1"
        },
        "transitions" : {
          "actions" : {
            "equal" : "callCustCare",
            "notequal" : "setAddressNotCorrectCountVariable"
          }
        }
      },
      "setAddressNotCorrectCountVariable" : {
        "component" : "System.SetVariable",
        "properties" : {
          "variable" : "addressNotCorrectCountVariable",
          "value" : "1"
        },
        "transitions" : { }
      },
      "copyAddressNotCorrectUserVariables" : {
        "component" : "System.CopyVariables",
        "properties" : {
          "from" : "addressNotCorrectCountVariable",
          "to" : "user.addressNotCorrectCountVariable"
        },
        "transitions" : {
          "next" : "addressNotCorrect"
        }
      },
      "addressNotCorrect" : {
        "component" : "System.List",
        "properties" : {
          "options" : "Phone Number,Account Number",
          "prompt" : " I’m sorry. Can you please provide an alternate phone number or account number?",
          "variable" : "selectedAccountType"
        },
        "transitions" : {
          "next" : "selectedAccount"
        }
      },
      "resetSelectedAccountVariables" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "phoneNumber,accountNumber,addressResponse"
        },
        "transitions" : { }
      },
      "selectedAccount" : {
        "component" : "System.Switch",
        "properties" : {
          "variable" : "selectedAccountType",
          "values" : [ "Phone Number", "Account Number" ]
        },
        "transitions" : {
          "actions" : {
            "Phone Number" : "linkedViaPhoneNumber",
            "Account Number" : "linkedViaAccountNumber"
          }
        }
      },
      "resetVariablesForWrongInput" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "phoneNumber,accountNumber,addressResponse,selectedAccountType"
        },
        "transitions" : {
          "next" : "selectAccountOrPhone"
        }
      },
      "linkedViaPhoneNumber" : {
        "component" : "System.Text",
        "properties" : {
          "prompt" : "Great. What is the primary phone number?",
          "variable" : "phoneNumber"
        },
        "transitions" : {
          "next" : "printOutage"
        }
      },
      "linkedViaAccountNumber" : {
        "component" : "System.Text",
        "properties" : {
          "prompt" : "Great. What is the account number?",
          "variable" : "accountNumber"
        },
        "transitions" : {
          "next" : "printOutage"
        }
      },
      "checkStatusOrReportOutage" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "reportOutageVariable",
          "value" : "true"
        },
        "transitions" : {
          "actions" : {
            "equal" : "resetReportOutageVariables",
            "notequal" : "resetMultipleAddressVariable"
          }
        }
      },
      "resetMultipleAddressVariable" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "activeStatusResponse,reportOutageOrNot,outageType"
        },
        "transitions" : { }
      },
      "checkOutageStatus" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "setStatus",
          "value" : "ACTIVE"
        },
        "transitions" : {
          "actions" : {
            "equal" : "activeOutageStatus",
            "notequal" : "checkReportedOutage"
          }
        }
      },
      "activeOutageStatus" : {
        "component" : "System.List",
        "properties" : {
          "options" : "yes,no",
          "prompt" : "${setOutageReported.value} \nIs there anything else that I can help you with?",
          "variable" : "activeStatusResponse"
        },
        "transitions" : {
          "next" : "checkActiveStatusResponse"
        }
      },
      "checkActiveStatusResponse" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "activeStatusResponse",
          "value" : "no"
        },
        "transitions" : {
          "actions" : {
            "equal" : "activeStatusEnd",
            "notequal" : "resetStartBotVariables"
          }
        }
      },
      "resetStartBotVariables" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "typeOfFault,outageOptions,phoneNumber,accountNumber,addressResponse,addressFound,setStatus,activeStatusResponse"
        },
        "transitions" : {
          "next" : "startBot"
        }
      },
      "activeStatusEnd" : {
        "component" : "System.Output",
        "properties" : {
          "text" : "Thank you. Please come back anytime. Have a nice day!"
        },
        "transitions" : {
          "return" : "activeStatusEnd"
        }
      },
      "resetAllReportOutageVariable" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "addressNotCorrectCountVariable,user.addressNotCorrectCountVariable,accountsOptions,setStatus,activeStatusResponse,reportOutageOrNot,selectedAccountOption,isMultipleAddressOrNot,numberOfAccount,addressFound,reportOutageVariable,outageType,anythingElseVariable,phoneNumber,accountNumber,unresolvedVariable,user.unresolvedVariable,selectAccountOrPhoneVariable,user.selectAccountOrPhoneVariable"
        },
        "transitions" : { }
      },
      "reportOutage" : {
        "component" : "System.Text",
        "properties" : {
          "prompt" : "What's the primary phone number associated with your account?",
          "variable" : "phoneNumber"
        },
        "transitions" : {
          "next" : "setReportOutageVariable"
        }
      },
      "setReportOutageVariable" : {
        "component" : "System.SetVariable",
        "properties" : {
          "variable" : "reportOutageVariable",
          "value" : "true"
        },
        "transitions" : {
          "next" : "printOutage"
        }
      },
      "checkReportedOutage" : {
        "component" : "System.List",
        "properties" : {
          "options" : "yes,no",
          "prompt" : "I am not aware of an outage in your area. If you reported an outage within the past 15 minutes, it may not yet be reflected here.\nIf you are without service, please check your circuit breakers,\nor if your home has a fuse box, check your fuses to ensure they are in good working condition. \nIf this does not resolve the issue, you can also report an outage. \nWould you like to report an outage?",
          "variable" : "reportOutageOrNot"
        },
        "transitions" : {
          "next" : "selectResponseForReport"
        }
      },
      "selectResponseForReport" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "reportOutageOrNot",
          "value" : "yes"
        },
        "transitions" : {
          "actions" : {
            "equal" : "askOutageType",
            "notequal" : "end"
          }
        }
      },
      "askOutageType" : {
        "component" : "System.List",
        "properties" : {
          "options" : "${outageType.type.enumValues}",
          "prompt" : "Great, let's get that reported.\nIs it a full outage or partial outage?",
          "variable" : "outageType"
        },
        "transitions" : {
          "next" : "forMultipleOrSingle"
        }
      },
      "resetReportOutageVariables" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "reportOutageVariable,outageType,anythingElseVariable"
        },
        "transitions" : { }
      },
      "reportForGasOrElectric" : {
        "component" : "System.List",
        "properties" : {
          "options" : "Gas,Electric",
          "prompt" : "Ok, let’s get this reported. Is this an electric outage or a gas emergency?",
          "variable" : "typeOfFault"
        },
        "transitions" : {
          "next" : "checkSelectedFaultOption"
        }
      },
      "checkSelectedFaultOption" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "typeOfFault",
          "value" : "Electric"
        },
        "transitions" : {
          "actions" : {
            "equal" : "directReportOutage",
            "notequal" : "resetActiveStatusResponse"
          }
        }
      },
      "resetActiveStatusResponse" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "activeStatusResponse"
        },
        "transitions" : { }
      },
      "reportGasOutage" : {
        "component" : "System.List",
        "properties" : {
          "options" : "yes,no",
          "prompt" : "For all gas emergencies, please contact BGE at 1-877-778-2222.\nIf you smell natural gas, leave the area immediately, and then call BGE.\nThis number is available 24 hours a day, 7 days a week.\nIs there anything else that I can help you with?",
          "variable" : "activeStatusResponse"
        },
        "transitions" : {
          "next" : "checkActiveStatusResponse"
        }
      },
      "directReportOutage" : {
        "component" : "System.List",
        "properties" : {
          "options" : "${outageType.type.enumValues}",
          "prompt" : "Ok, let’s get this reported. Is it a full outage or partial?",
          "variable" : "outageType"
        },
        "transitions" : {
          "next" : "forMultipleOrSingle"
        }
      },
      "forMultipleOrSingle" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "isMultipleAddressOrNot",
          "value" : "true"
        },
        "transitions" : {
          "actions" : {
            "equal" : "printReportOutageForMultiple",
            "notequal" : "printReportOutage"
          }
        }
      },
      "printReportOutageForMultiple" : {
        "component" : "ReportOutage",
        "properties" : {
          "PhoneNumber" : "",
          "AccountNumber" : "${selectedAccountNumber}",
          "OutageType" : "${outageType.value}"
        },
        "transitions" : {
          "next" : "resetAnythingElseVariable"
        }
      },
      "printReportOutage" : {
        "component" : "ReportOutage",
        "properties" : {
          "PhoneNumber" : "${user.phoneNumber.value}",
          "AccountNumber" : "${user.accountNumber.value}",
          "OutageType" : "${outageType.value}"
        },
        "transitions" : {
          "next" : "resetAnythingElseVariable"
        }
      },
      "resetAnythingElseVariable" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "anythingElseVariable"
        },
        "transitions" : { }
      },
      "anythingElse" : {
        "component" : "System.List",
        "properties" : {
          "options" : "yes,no",
          "prompt" : "${outageReportProgress.value} .\nIs there anything else that I can help you with?",
          "variable" : "anythingElseVariable"
        },
        "transitions" : {
          "next" : "checkQuestionResponse"
        }
      },
      "checkQuestionResponse" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "anythingElseVariable",
          "value" : "no"
        },
        "transitions" : {
          "actions" : {
            "equal" : "end",
            "notequal" : "resetStartBotVariables"
          }
        }
      },
      "resetEnd" : {
        "component" : "System.ResetVariables",
        "properties" : {
          "variableList" : "addressNotCorrectCountVariable,user.addressNotCorrectCountVariable,unresolvedVariable,user.unresolvedVariable,selectAccountOrPhoneVariable,user.selectAccountOrPhoneVariable"
        },
        "transitions" : { }
      },
      "end" : {
        "component" : "System.Output",
        "properties" : {
          "text" : "Thank you. Please come back anytime. Have a nice day!"
        },
        "transitions" : {
          "return" : "end"
        }
      },
      "checkUnresolvedCount" : {
        "component" : "System.ConditionEquals",
        "properties" : {
          "variable" : "user.unresolvedVariable",
          "value" : "1"
        },
        "transitions" : {
          "actions" : {
            "equal" : "callCustCare",
            "notequal" : "unresolved"
          }
        }
      },
      "unresolved" : {
        "component" : "System.List",
        "properties" : {
          "options" : "${outageOptions.type.enumValues}",
          "prompt" : "I’m sorry, but I’m unavailable to assist you at this time. You can check Outage Status or Report an Outage.\nPlease pick one option.",
          "variable" : "outageOptions",
          "maxPrompts" : 1
        },
        "transitions" : {
          "next" : "setUnresolvedVariable"
        }
      },
      "setUnresolvedVariable" : {
        "component" : "System.SetVariable",
        "properties" : {
          "variable" : "unresolvedVariable",
          "value" : "1"
        },
        "transitions" : { }
      },
      "copyUserVariables" : {
        "component" : "System.CopyVariables",
        "properties" : {
          "from" : "unresolvedVariable",
          "to" : "user.unresolvedVariable"
        },
        "transitions" : {
          "next" : "switchOutageOptions"
        }
      },
      "callCustCare" : {
        "component" : "System.Output",
        "properties" : {
          "text" : "I’m sorry, but I am unavailable to assist you at this time. Please visit us at bge.com or you can call us at 1-800-685-0123 for further support."
        },
        "transitions" : {
          "return" : "callCustCare"
        }
      }
    }
  } ],
  "componentServices" : [ {
    "name" : "BGECustomComponents",
    "description" : "custom components",
    "url" : "https://mobileportaldev-sofbangsub.mobileenv.us2.oraclecloud.com:443/mobile/custom/ExelonBGEUtilityBotCC/components",
    "version" : "1.0",
    "headers" : [ ],
    "credentials" : {
      "type" : "mcs",
      "mobileBackendId" : "e8b36dcd-f0df-4dcb-b7be-4a7c0a43f22c",
      "anonymous" : true,
      "username" : null,
      "anonymousKeyKey" : null,
      "passwordKey" : null
    }
  } ],
  "trainingDataList" : [ {
    "sentence" : "Is there an outage?",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Is there an outage",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "My electricity is out",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Check my outage",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Check my Outage",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Do we have an Outage?",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Do we have an outage?",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Do we have an outage",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "When will my power be back?",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "When will my power be back",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "outage status",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "When will my power be restored?",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "What is the outage status for my account?",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Can you tell me outage status for my account?",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Whats the outage status for my account?",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Whats the outage status?",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "I’m out",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "OUT",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Out",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "It’s dark in here",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Out lights are out",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Power out",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Black out",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "No Power",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "no power",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "no lights",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Lights out",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Turn my power on",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Turn my power back on",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Turn my power on now",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Outage",
    "intent" : "OutageStatus",
    "namedEntities" : [ ]
  }, {
    "sentence" : "close",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "I am all done for now",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "not right now",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "I am done for now",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "not right now",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "thank you",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "thanks",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "thats it",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "thats it for now",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "end",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "nothing",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Bye",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Thank you",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Have a good day",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "That will be all",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Good Bye",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Goodbye",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Thanks",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "THX",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "TY",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "ty",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Ty",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Done",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "i'm done",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "I'm done",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "ttyl",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "TTYL",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "No",
    "intent" : "End",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Report Outage",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "report outage",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "I have an outage",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "I would like to report an outage",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "I don’t have electricity",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "No electricity",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "No power",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "I don’t have power",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "I do not have power",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Report outage",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "No power in my house",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Power",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "My power is out",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Report outage for 9176789111",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Report outage for phone number 4904861189",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "My power is out",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "No electricity in my house",
    "intent" : "ReportOutage",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Hello BG&E",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Good Afternoon",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "BG&E App",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "BG&E app",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Hello",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Hi",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Good Morning",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Good Evening",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Hey ",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Hey you there ?",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Hey you there?",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Bot",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "What's up",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "What's up?",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Whats up",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Wuts up?",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  }, {
    "sentence" : "Wuts up",
    "intent" : "StartBot",
    "namedEntities" : [ ]
  } ],
  "channels" : [ {
    "name" : "FacebookChannel",
    "enabled" : true,
    "config" : {
      "type" : "facebook"
    }
  }, {
    "name" : "System_Bot_Test",
    "description" : "Used by the BOT test feature. If it is disabled, the test UI will not work for this BOT.",
    "enabled" : true,
    "config" : {
      "type" : "test"
    }
  }, {
    "name" : "GoogleAssistance",
    "description" : "GoogleAssistance",
    "enabled" : true,
    "config" : {
      "type" : "webhook",
      "webhookUri" : "https://bots-samples-nodejs:8889/apps/chat/bots/0790802F-43A9-47A4-9AE9-34C7611B78C6/messages"
    }
  } ],
  "settings" : {
    "createdOn" : "2017-11-03T05:51:56.999Z",
    "updatedOn" : "2017-11-03T05:51:56.999Z",
    "links" : null,
    "settings" : {
      "Multistage_Pipeline" : true,
      "Verbose_Output" : false,
      "Result_Size" : 10,
      "Pipeline_Output_Size" : 100
    }
  }
}